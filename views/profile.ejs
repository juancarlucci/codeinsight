<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <title>codeInsight</title>

    <!-- STYLESHEETS -->
    <link rel="stylesheet" href="//maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css">
    <link rel="stylesheet" href="/styles/styles.css">

    <!-- VENDOR SCRIPTS -->
    <script src="//ajax.googleapis.com/ajax/libs/jquery/2.2.2/jquery.min.js"></script>
    <script type='text/javascript' src="http://code.jquery.com/ui/1.11.0/jquery-ui.min.js"> </script>
    <script type='text/javascript' src="http://code.jquery.com/ui/1.11.0/themes/smoothness/jquery-ui.css"> </script>

    <script src="https://d3js.org/d3.v4.min.js"></script>
    <script src="https://d3js.org/d3-selection-multi.v0.4.min.js"></script>

    <!-- APPLICATION SCRIPTS -->

    <!-- <script src="/scripts/d3-profile.js"></script> -->
    <script src="/scripts/app.js" defer></script>
  </head>
  <body>


    <%- include('nav'); %>
  <container class="userInfo">
    <p>location: san francisco
    hireable: true
    repos: 48
    gists: 3</p>
  </container>

<container class="charts-container">
  <div class="bar-title">
    <h4 class="bar-title">Your repos by language</h4>
  </div>
  <svg id="bar-chart" width="860" height="200"></svg>

  <div class="bar-title">
    <h4>Recent commits</h4>
  </div>
  <article id="profile-layout"></article>
</container>

<script>

//////////////LINE graph
//Inspired by

var svg = d3.select("#profile-layout").append("svg")
      .attr("width", 860)
      .attr("height", 200)

    var margin = {left:30, right:30, top: 10, bottom: 20}
    var width = svg.attr("width") - margin.left - margin.right;
    var height = svg.attr("height") - margin.bottom - margin.top;


    var data = [{"name": "javascript", "date":"04/04/2018", "JS": 25, "PY": 60, "C": 10, "JV": 2},
                {"name": "python","date":"04/03/2018", "JS": 50, "PY": 80, "C": 20, "JV": 1},
                {"name": "c","date":"04/02/2018", "JS": 31, "PY": 70, "C": 10, "JV": 20},
                {"name": "java","date":"04/01/2018", "JS": 4, "PY": 3, "C": 6, "JV": 10}

               ]

    var x = d3.scaleTime()
    	.rangeRound([0, width]);
    var x_axis = d3.axisBottom(x);

    var y = d3.scaleLinear()
    	.rangeRound([height, 0]);
    var y_axis = d3.axisBottom(y);

    var parseTime = d3.timeParse("%d/%m/%Y");

    x.domain(d3.extent(data, function(d) { return parseTime(d.date); }));
  	y.domain([0,
              d3.max(data, function(d) {
                return d3.max([d.JS, d.PY, d.C, d.JV]);
              })]);

    var multiline = function(category) {
      var line = d3.line()
                  .x(function(d) { return x(parseTime(d.date)); })
                  .y(function(d) { return y(d[category]); });
      return line;
    }

    var line = d3.line()
      .x(function(d) { return x(parseTime(d.date)); })
      .y(function(d) { return y(d); });

    var categories = ['JS', 'PY', 'C', 'JV'];

    var color = d3.scaleOrdinal(d3.schemeCategory10);

    var g = svg.append("g")
        .attr("transform",
          "translate(" + margin.left + "," + margin.top + ")");

    for (i in categories) {
      var lineFunction = multiline(categories[i]);
      g.append("path")
        .datum(data)
        .attr("class", "line")
        .style("stroke",  color(i))
        .attr("d", lineFunction);

    // }

      // Add the X Axis
  		g.append("g")
      .attr("transform", "translate(0," + height + ")")
      .call(d3.axisBottom(x));

      // Add the Y Axis
  		g.append("g")
      .call(d3.axisLeft(y));

      //LEGEND
      var legend = svg.selectAll(".legend")
        .data(categories)
      .enter().append("g")
        .attr("class", "legend")
        .attr("transform", function(d, i) { return "translate(0," + i * 20 + ")"; });

    legend.append("rect")
        .attr("x", width - 18)
        .attr("width", 18)
        .attr("height", 18)
        .style("fill", function(d, i) { return color(i); })

    legend.append("text")
        .attr("x", width - 24)
        .attr("y", 9)
        .attr("dy", ".35em")
        .style("text-anchor", "end")
        .text(function(d) { return d; });
}



//////////////////////////////////////////////////
////////////////BAR CHART/////////////////////////
///////////////////////////////////////////////////
///FAKE TEST DATA
var  data2 = [
  {
    name:"vue",
    language: 'JavaScript',
    stargazers_count: 15,
    avatar_url: 'https://avatars1.githubusercontent.com/u/6128107?v=4',
    homepage: 'http://vuejs.org'
  },
  {
    name:"bootstrap",
    language: 'Python',
    stargazers_count: 3,
    avatar_url: 'https://avatars0.githubusercontent.com/u/2918581?v=4',
    homepage: 'http://getbootstrap.com'
  },
  {
    name:"reaJact",
    language: 'Java',
    stargazers_count: 1,
    avatar_url: 'https://avatars3.githubusercontent.com/u/69631?v=4',
  },
  {
  name:"javascript",
  language: 'JavaScript',
  stargazers_count: 6,
  avatar_url: 'https://avatars3.githubusercontent.com/u/698437?v=4'
  },
  {
    name:"eJava",
    language: 'Java',
    stargazers_count: 5
  },
  {
    name:"jquery",
    language: 'Python',
    stargazers_count: 3
  },
  {
    name:"lamda",
    language: 'Lisp',
    stargazers_count: 13
  }

];

var color = d3.scaleOrdinal(d3.schemeCategory20);

var svg2 = d3.select("#bar-chart"),
  margin2 = {
    top: 20,
    right: 20,
    bottom: 30,
    left: 40
  },
  width2 = +svg2.attr("width") - margin2.left - margin2.right,
  height2 = +svg2.attr("height") - margin2.top - margin2.bottom;

var x = d3.scaleBand().rangeRound([0, width2]).padding(0.4),
  y = d3.scaleLinear().rangeRound([height2, 0]);

var g = svg2.append("g")
  .attr("transform", "translate(" + margin2.left + "," + margin2.top + ")");

// var data = d3.csvParse(csv, function(d) {
//   d.stargazers_count = +d.stargazers_count;
//   return d;
// })

x.domain(data2.map(function(d) {
  return d.language;
}));
y.domain([0, d3.max(data2, function(d) {
  return d.stargazers_count;
})]);

g.append("g")
  .attr("class", "axis axis--x")
  .attr("transform", "translate(0," + height2 + ")")
  .call(d3.axisBottom(x));

g.append("g")
  .attr("class", "axis axis--y")
  .call(d3.axisLeft(y).ticks(12, "s"))
  .append("text")
  .attr("transform", "rotate(-90)")
  .attr("y", 6)
  .attr("dy", "0.71em")
  .attr("text-anchor", "end")
  .text("Frequency");

g.selectAll(".bar")
  .data(data2)
  .enter().append("rect")
  .attr("class", "bar")
  .attr("x", function(d) {
    return x(d.language);
  })
  .attr("fill", function(d) { return color(d.language); })
  .attr("y", height2)
  .transition().duration(1500)
  .ease(d3.easeExp)
  .attr("y", function(d) {
    return y(d.stargazers_count);
  })
  .attr("width", x.bandwidth())
  .attr("height", function(d) {
    return height2 - y(d.stargazers_count);
  });

  </script>
  </body>
</html>
